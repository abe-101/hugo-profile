<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Projects on Abe's Portfolio</title><link>https://habet.dev/project/</link><description>Recent content in Projects on Abe's Portfolio</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 14 Jul 2022 11:30:13 +0530</lastBuildDate><atom:link href="https://habet.dev/project/index.xml" rel="self" type="application/rss+xml"/><item><title>Tube Cast</title><link>https://habet.dev/project/tube-cast/</link><pubDate>Thu, 14 Jul 2022 11:30:13 +0530</pubDate><guid>https://habet.dev/project/tube-cast/</guid><description/></item><item><title>Bagel Shop App</title><link>https://habet.dev/project/bagel-shop-app/</link><pubDate>Mon, 10 Jan 2022 11:30:13 +0530</pubDate><guid>https://habet.dev/project/bagel-shop-app/</guid><description>CS50x Final Project As part of Harvards CS50x course we had to build our own project. I used this opportunity to solve a real world problem. In my Community we have a local study group. One of the benefits of the group is that breakfast gets delivered from the local bagel shop. The problem was the members had no way to choose what they wanted. This app attempts to solve it.</description></item><item><title>Abe's finance</title><link>https://habet.dev/project/abes-finance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://habet.dev/project/abes-finance/</guid><description>This was CS50 Building this project challenged my skills. After teaching us python, SQL, HTML CSS and JS it had us build a fully functional web app. A paper trading app. Given just a basic flask app structure with login, logout, price lookup, user database and an error page. We had to build the rest. Which included registering, buying and selling stock, quote, history page and a index page. It was necessary to build more tables in the database to keep track of transactions.</description></item></channel></rss>